# YAML
stages:
  - test
  - docker

variables:
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  DOCKER_DRIVER: overlay2

cache:
  key: ${CI_PROJECT_NAME}
  paths:
    - .m2/repository/
  policy: pull-push

test:
  stage: test
  image: maven:3.9-eclipse-temurin-17
  before_script:
    - apt-get update && apt-get install -y --no-install-recommends make && rm -rf /var/lib/apt/lists/*
    # Install local lib required by the project
    - mkdir -p .libs || true
    - test -f .libs/eodsql.jar || echo "Missing .libs/eodsql.jar" 1>&2
    - mvn -B -q install:install-file -Dfile=.libs/eodsql.jar -DgroupId=net.lemnik -DartifactId=eodsql -Dversion=2.2 -Dpackaging=jar
    # Warm dependencies to speed up
    - mvn -B -q -DskipTests dependency:go-offline
    # Ensure no stale reports remain
    - rm -rf target/surefire-reports || true
  script:
    - make all-test
  artifacts:
    when: always
    paths:
      - target/surefire-reports/
    expire_in: 1 week

docker-build:
  stage: docker
  image: docker:26
  services:
    - docker:26-dind
  variables:
    DOCKER_HOST: tcp://docker:2375
  script:
    # Build with fresh base layers and run tests inside the Dockerfile (it calls `make all-test`)
    - docker build --pull -t "${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}" .
    # Optionally push
    - |
      if [ -n "${CI_REGISTRY}" ]; then
        echo "${CI_REGISTRY_PASSWORD}" | docker login -u "${CI_REGISTRY_USER}" --password-stdin "${CI_REGISTRY}"
        docker tag "${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}" "${CI_REGISTRY_IMAGE}:latest"
        docker push "${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}"
        docker push "${CI_REGISTRY_IMAGE}:latest"
      fi
  rules:
    - if: '$CI_COMMIT_BRANCH'
      when: on_success
    - if: '$CI_COMMIT_TAG'
      when: on_success